type BizItemInfoResponse {
  error: Boolean!
  errorMessage: String
  bizItemInfo: JSON
}

type ListOfBizItemsResponse {
  error: Boolean!
  errorMessage: String
  bizItems: [BizItem]
}

type BizItem {
  businessId: String
  bizItemId: String
  slotMapId: [String]
}

type Query {
  getBizItemInfo(bizItemId: String!): BizItemInfoResponse!
  getListOfBizItems: ListOfBizItemsResponse!
  sample1(name: String!): SampleResponse!
  sample2(slotId: String!): Sample2Response!
}

scalar JSON

type SampleResponse {
  text: String!
  error: Boolean!
}

type SampleMessage {
  channel: String!
  text: String!
}

type Mutation {
  sample1(channel: String!, text: String!): SampleMessage!
  sample2(slotId: String!, view: String!, typeName: String!): Sample2Response!
  synchronizationForSlot(bizItemId: String!, slotMapId: String!): Boolean
}

type Subscription {
  sample1(channel: String!): SampleMessage!
}

type Sample2Response {
  slot: Slot
  errorMessage: String
  error: Boolean!
}

type Slot {
  slotId: String!
  view: String!
  state: SlotState
  typeName: String!
}

enum SlotState {
  FREE
  OCCUPIED
  SOLD
}
