type BizItem {
  businessId: String
  bizItemId: String
  slotMapIds: [String]
}

type Query {
  bizItemDetails(bizItemId: String!): JSON!
  bizItems: [BizItem]!
  bizItem(bizItemId: String!): BizItem!
  sample1(name: String!): String!
  sample2(slotId: String!): Slot!
  slot(bizItemId: String!, slotMapId: String!, number: String!): Slot!
  slots(bizItemId: String!, slotMapId: String!): [Slot]!
  token: String!
}

type Mutation {
  createBizItem(bizItemId: String!, businessId: String!, slotMapIds: [String]!): [BizItem]!
  sample1(channel: String!, text: String!): SampleMessage!
  sample2(slotId: String!, view: String!, typeName: String!): Slot!
  updateSlots(bizItemId: String!, slotMapId: String!, numbers: [String]!, status: SlotStatus!): [Slot]!
  syncSlots(bizItemId: String!, slotMapId: String!): [Slot]!
}

scalar JSON

type SampleMessage {
  channel: String!
  text: String!
}

type Subscription {
  sample1(channel: String!): SampleMessage!
}

enum SlotStatus {
  FREE
  OCCUPIED
  SOLD
}

type Slot {
  bizItemId: String
  slotMapId: String
  number: String
  view: String
  status: SlotStatus
  typeName: String
}
